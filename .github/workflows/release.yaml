name: release

on:
  workflow_dispatch:
  repository_dispatch:
    types: [release-from-assets]

jobs:
  release:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check if AssetsRepo is set
        run: |
          if [ -z "${{ vars.ASSETS_REPO }}" ]; then
            echo "Error: ASSETS_REPO is not set"
            exit 1
          fi

      - uses: actions/checkout@v4
        with:
          repository: ${{ vars.ASSETS_REPO }}
          path: Assets

      - name: Setup golang
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: true

      - run: go version

      - name: Build
        run: go build

      - name: List files
        run: bash ./scripts/list_all_file_to_change.sh A

      - name: Filter for test
        if: ${{ vars.IS_TEST == 'true' }}
        run: sed -i '2,$d' ./dump/en_files.txt

      - name: Download Paratranz artifact
        run: bash ./scripts/download_artifact.sh ${{ secrets.PARA_PROJECT_ID }} ${{ secrets.PARA_TOKEN }}

      - name: Run export
        run: ./ParatranzUploader -export en -from-artifact

      - name: Get current date
        id: date
        run: echo "tag=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Generate full_hash
        id: hash
        run: |
          TIMESTAMP_HASH=$(date -u +%s | sha256sum | head -c 3)
          COMMIT_HASH=$(git log -1 --pretty=format:%h | head -c 3)
          FULL_HASH="${TIMESTAMP_HASH}${COMMIT_HASH}"
          echo "full_hash=$FULL_HASH" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: release_dump_${{ env.tag }}_${{ env.full_hash }}
          path: dump/

      - name: Compress to zip
        run: cd export && zip -r "LTM_only_text_${{ env.tag }}_${{ env.full_hash }}.zip" LimbusCompany_Data

      - name: Delete existing release and tag
        run: gh release delete ${{ env.tag }} --cleanup-tag --yes || true
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.tag }}
          name: Release ${{ env.tag }}
          body: |
            - v${{ env.tag }} text update
            - Build Hash: ${{ env.full_hash }}
          draft: false
          prerelease: false
          files: "export/LTM_only_text_${{env.tag}}_${{env.full_hash}}.zip"
